from typing import Any

class WorkEntity:
    openapi_types: Any
    attribute_map: Any
    discriminator: Any
    def __init__(self, state: Any | None = ..., ident: Any | None = ..., revision: Any | None = ..., redirect: Any | None = ..., extra: Any | None = ..., edit_extra: Any | None = ...) -> None: ...
    @property
    def state(self): ...
    @state.setter
    def state(self, state) -> None: ...
    @property
    def ident(self): ...
    @ident.setter
    def ident(self, ident) -> None: ...
    @property
    def revision(self): ...
    @revision.setter
    def revision(self, revision) -> None: ...
    @property
    def redirect(self): ...
    @redirect.setter
    def redirect(self, redirect) -> None: ...
    @property
    def extra(self): ...
    @extra.setter
    def extra(self, extra) -> None: ...
    @property
    def edit_extra(self): ...
    @edit_extra.setter
    def edit_extra(self, edit_extra) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
