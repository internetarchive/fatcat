from typing import Any

class Editgroup:
    openapi_types: Any
    attribute_map: Any
    discriminator: Any
    def __init__(self, editgroup_id: Any | None = ..., editor_id: Any | None = ..., editor: Any | None = ..., changelog_index: Any | None = ..., created: Any | None = ..., submitted: Any | None = ..., description: Any | None = ..., extra: Any | None = ..., annotations: Any | None = ..., edits: Any | None = ...) -> None: ...
    @property
    def editgroup_id(self): ...
    @editgroup_id.setter
    def editgroup_id(self, editgroup_id) -> None: ...
    @property
    def editor_id(self): ...
    @editor_id.setter
    def editor_id(self, editor_id) -> None: ...
    @property
    def editor(self): ...
    @editor.setter
    def editor(self, editor) -> None: ...
    @property
    def changelog_index(self): ...
    @changelog_index.setter
    def changelog_index(self, changelog_index) -> None: ...
    @property
    def created(self): ...
    @created.setter
    def created(self, created) -> None: ...
    @property
    def submitted(self): ...
    @submitted.setter
    def submitted(self, submitted) -> None: ...
    @property
    def description(self): ...
    @description.setter
    def description(self, description) -> None: ...
    @property
    def extra(self): ...
    @extra.setter
    def extra(self, extra) -> None: ...
    @property
    def annotations(self): ...
    @annotations.setter
    def annotations(self, annotations) -> None: ...
    @property
    def edits(self): ...
    @edits.setter
    def edits(self, edits) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
