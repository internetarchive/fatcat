from typing import Any

class FileEntity:
    openapi_types: Any
    attribute_map: Any
    discriminator: Any
    def __init__(self, state: Any | None = ..., ident: Any | None = ..., revision: Any | None = ..., redirect: Any | None = ..., extra: Any | None = ..., edit_extra: Any | None = ..., size: Any | None = ..., md5: Any | None = ..., sha1: Any | None = ..., sha256: Any | None = ..., urls: Any | None = ..., mimetype: Any | None = ..., content_scope: Any | None = ..., release_ids: Any | None = ..., releases: Any | None = ...) -> None: ...
    @property
    def state(self): ...
    @state.setter
    def state(self, state) -> None: ...
    @property
    def ident(self): ...
    @ident.setter
    def ident(self, ident) -> None: ...
    @property
    def revision(self): ...
    @revision.setter
    def revision(self, revision) -> None: ...
    @property
    def redirect(self): ...
    @redirect.setter
    def redirect(self, redirect) -> None: ...
    @property
    def extra(self): ...
    @extra.setter
    def extra(self, extra) -> None: ...
    @property
    def edit_extra(self): ...
    @edit_extra.setter
    def edit_extra(self, edit_extra) -> None: ...
    @property
    def size(self): ...
    @size.setter
    def size(self, size) -> None: ...
    @property
    def md5(self): ...
    @md5.setter
    def md5(self, md5) -> None: ...
    @property
    def sha1(self): ...
    @sha1.setter
    def sha1(self, sha1) -> None: ...
    @property
    def sha256(self): ...
    @sha256.setter
    def sha256(self, sha256) -> None: ...
    @property
    def urls(self): ...
    @urls.setter
    def urls(self, urls) -> None: ...
    @property
    def mimetype(self): ...
    @mimetype.setter
    def mimetype(self, mimetype) -> None: ...
    @property
    def content_scope(self): ...
    @content_scope.setter
    def content_scope(self, content_scope) -> None: ...
    @property
    def release_ids(self): ...
    @release_ids.setter
    def release_ids(self, release_ids) -> None: ...
    @property
    def releases(self): ...
    @releases.setter
    def releases(self, releases) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
