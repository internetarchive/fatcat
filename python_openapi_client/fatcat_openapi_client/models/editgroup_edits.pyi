from typing import Any

class EditgroupEdits:
    openapi_types: Any
    attribute_map: Any
    discriminator: Any
    def __init__(self, containers: Any | None = ..., creators: Any | None = ..., files: Any | None = ..., filesets: Any | None = ..., webcaptures: Any | None = ..., releases: Any | None = ..., works: Any | None = ...) -> None: ...
    @property
    def containers(self): ...
    @containers.setter
    def containers(self, containers) -> None: ...
    @property
    def creators(self): ...
    @creators.setter
    def creators(self, creators) -> None: ...
    @property
    def files(self): ...
    @files.setter
    def files(self, files) -> None: ...
    @property
    def filesets(self): ...
    @filesets.setter
    def filesets(self, filesets) -> None: ...
    @property
    def webcaptures(self): ...
    @webcaptures.setter
    def webcaptures(self, webcaptures) -> None: ...
    @property
    def releases(self): ...
    @releases.setter
    def releases(self, releases) -> None: ...
    @property
    def works(self): ...
    @works.setter
    def works(self, works) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
