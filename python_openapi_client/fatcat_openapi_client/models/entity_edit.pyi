from typing import Any

class EntityEdit:
    openapi_types: Any
    attribute_map: Any
    discriminator: Any
    def __init__(self, edit_id: Any | None = ..., ident: Any | None = ..., revision: Any | None = ..., prev_revision: Any | None = ..., redirect_ident: Any | None = ..., editgroup_id: Any | None = ..., extra: Any | None = ...) -> None: ...
    @property
    def edit_id(self): ...
    @edit_id.setter
    def edit_id(self, edit_id) -> None: ...
    @property
    def ident(self): ...
    @ident.setter
    def ident(self, ident) -> None: ...
    @property
    def revision(self): ...
    @revision.setter
    def revision(self, revision) -> None: ...
    @property
    def prev_revision(self): ...
    @prev_revision.setter
    def prev_revision(self, prev_revision) -> None: ...
    @property
    def redirect_ident(self): ...
    @redirect_ident.setter
    def redirect_ident(self, redirect_ident) -> None: ...
    @property
    def editgroup_id(self): ...
    @editgroup_id.setter
    def editgroup_id(self, editgroup_id) -> None: ...
    @property
    def extra(self): ...
    @extra.setter
    def extra(self, extra) -> None: ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
